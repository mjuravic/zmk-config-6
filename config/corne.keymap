/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-mod-morph";
            label = "NEW_BEHAVIOR";
            bindings = <&none>, <&kp LEFT_SHIFT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp DEL           &kp Q  &kp W  &kp E   &kp R          &kp T        &kp Y      &kp U      &kp I      &kp O       &kp P     &kp ESC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D   &kp F          &kp G        &kp H      &kp J      &kp K      &kp L       &kp SEMI  &kp RSHIFT
&mt LEFT_ALT TAB  &kp Z  &kp X  &kp C   &kp V          &kp B        &kp N      &kp M      &kp COMMA  &kp PERIOD  &kp FSLH  &kp SQT
                                &tog 1  &kp BACKSPACE  &kp ENTER    &kp SPACE  &kp RCTRL  &tog 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp DEL           &kp N1        &kp N2          &kp UP       &kp PAGE_UP    &kp LEFT_WIN    &kp SLASH     &kp N7        &kp N8        &kp N9        &kp MINUS  &kp ESC
&kp LEFT_SHIFT    &bt BT_SEL 0  &kp LEFT_ARROW  &kp DOWN     &kp RIGHT      &bt BT_SEL 4    &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp N6        &kp PLUS   &kp RIGHT_SHIFT
&mt LEFT_ALT TAB  &kp K_CUT     &kp K_COPY      &kp K_PASTE  &kp PAGE_DOWN  &trans          &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &trans
                                                &tog 0       &kp BACKSPACE  &kp ENTER       &kp SPACE     &kp RCTRL     &tog 2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp DEL         &kp EXCL              &kp AT     &kp HASH       &kp DLLR       &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp C_BRI_DEC     &kp C_BRI_INC  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_RECORD     &kp ESCAPE
&kp LEFT_SHIFT  &kp RS(PRCNT)         &kp CARET  &kp AMPERSAND  &kp UNDER      &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp C_PLAY_PAUSE  &kp K_NEXT     &kp K_PREVIOUS                     &kp C_AC_SEARCH  &kp RIGHT_SHIFT
&kp LSHFT       &kp NON_US_BACKSLASH  &kp GRAVE  &kp TILDE      &trans         &bt BT_SEL 0            &kp PRINTSCREEN        &kp C_VOL_DN      &kp C_VOL_UP   &kp K_MUTE                         &kp PIPE         &kp CAPS
                                                 &tog 1         &kp BACKSPACE  &kp ENTER               &kp SPACE              &kp RCTRL         &tog 0
            >;
        };
    };
};
